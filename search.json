[{"title":"free函数删除链表节点报错问题","url":"/2022/08/09/free%E5%87%BD%E6%95%B0%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E8%8A%82%E7%82%B9%E6%8A%A5%E9%94%99%E9%97%AE%E9%A2%98/","content":"写程序时遇到的一个bug\n\n\n今天在写链表指定删除的时候，程序一旦运行会崩溃，cmd.exe还关闭不了，只有等重启之后才能关闭。\n最后调试才发现一旦运行到free函数就会崩溃，非常的懵逼。\nfree()的调用方式是：void  free(void  *ptr),释放由ptr所指的内存，并将它返回给堆，以便这些内存成为再分配时的可用内存。但是free()函数并不能将指针ptr赋空。\n所以，对于对于用malloc分配空间的指针p, 使用过后要这样释放：\n\nfree(p);\np&#x3D;NULL;\n\n在我找了一段时间后发现的问题所在内存溢出或者说内存分配出现了问题\n下面是我的代码的一部分：\n// 创建表头struct Node*creatHead()&#123;\t// 动态内存申请\tstruct Node* headnode = (struct Node*)malloc(sizeof(struct Node*)); \theadnode-&gt;next = NULL;\treturn headnode;&#125;;// 创建节点struct Node* creatNode(int data)&#123;\tstruct Node* newNode = (struct Node*)malloc(sizeof(struct Node*));\tnewNode-&gt;data = data;\tnewNode-&gt;next = NULL;\treturn newNode;&#125;\n\n// 指定数据删除void deleteNodeByData(struct Node* Nodehead, int posdata)&#123;\tstruct Node* posleftNode = Nodehead;\tstruct Node* posNode = Nodehead-&gt;next;\t//查找删除节点\twhile (posNode != NULL &amp;&amp; posNode-&gt;data != posdata)\t&#123;\t\tposleftNode = posNode;\t\tposNode = posleftNode-&gt;next;\t&#125;\t//判断查找结果\tif (posNode == NULL)\t&#123;\t\treturn;\t&#125;\telse\t&#123;\t\tposleftNode-&gt;next = posNode-&gt;next;\t\tfree(posNode);\t\tposNode = NULL;\t&#125;&#125;\n\n上面代码的问题就出现在创建动态链表的时候malloc(sizeof(struct Node*))出现了问题\n\nsizeof(struct Node)  &#x3D; 16\nsizeof(struct Node*) &#x3D; 8\n\n在这个程序中，每次我们分配一个8字节的大小给节点，但在下面赋值的时候有超过了8字节，当我们free的时候，给free函数一个指针，但是在内存中已经乱了，不是我们想要的地址了，那个时候我们free掉的不是我们想要free的节点，而是不知道什么东西让我们free了，这个时候程序就崩溃了。\n","categories":["笔记","C"],"tags":["C语言","编译器报错"]},{"title":"java面向对象编程","url":"/2022/07/15/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B/","content":"java笔记\n\n\n基础内容基本数据类型byte：\n\n最大值：127（2^7-1）\n\n最小值：128（-2^7）\n\n默认值：0\n\n例子：byte a &#x3D; 100;\n\n\nshort：\n\n最大值：32767（2^15 - 1）\n最小值：- 32768（-2^15）\n默认值：0\n例子：short r &#x3D; 2000\n\nint：\n\n最大值是 2,147,483,647（2^31 - 1）\n最小值是 -2,147,483,648（-2^31）\n默认值是 0 ；\n例子：int a &#x3D; 100000\n\nlong：\n\n最大值：9,223,372,036,854,775,807（2^63 -1）\n最小值：-9,223,372,036,854,775,808（-2^63）\n默认值：0L（L是不分大小写的，但是写成大写不容易看错）\n例子：long a &#x3D; 10L\n\nfloat：\n\n单精度32位浮点数\n例子：float num &#x3D; 233.45f\n\ndouble：\n\n双精度64位浮点数\n例子：double num &#x3D; 7\n\nboolean：\n\n布尔类型，用来表示真假\n取值：true和false\n例子：boolean flag &#x3D; true\n\nchar：\n\n字符类型\nchar a &#x3D; ‘A’\njava中字符串不是字符数组，它是引用类型\n\n控制语句输入输出输出\n使用System.out.println()来输出\nprintln是print line缩写 -&gt; 输出并换行\npublic class Main &#123;    public static void main(String[] args) &#123;        System.out.print(&quot;A,&quot;);        System.out.print(&quot;B,&quot;);        System.out.print(&quot;C.&quot;);        System.out.println();        System.out.println(&quot;END&quot;);    &#125;&#125;\n\n格式化输出\n格式化方式与C可以说是一样\npublic class Main &#123;    public static void main(String[] args) &#123;        double d = 3.1415926;        System.out.printf(&quot;%.2f\\n&quot;, d); // 显示两位小数3.14        System.out.printf(&quot;%.4f\\n&quot;, d); // 显示4位小数3.1416    &#125;&#125;\n\n输入\n输入比输出麻烦一些，需要导包使用Scanner类\nimport java.util.Scanner;public class Main &#123;    public static void main(String[] args) &#123;        Scanner scanner = new Scanner(System.in);        System.out.println(&quot;请输入你的名字&quot;);        String name = scanner.nextLine();        System.out.println(&quot;输入你的年龄&quot;);        int age = scanner.nextInt();        System.out.println(&quot;你的名字是：&quot;+name+&quot;\\n你的年龄是：&quot;+age);    &#125;&#125;\n\n流程控制for each循环\nfor each循环的变量n不再是计数器，而是直接对应到数组的每个元素。\npublic class Main &#123;    public static void main(String[] args) &#123;        int[] ns = &#123; 1, 4, 9, 16, 25 &#125;;        for (int n : ns) &#123;            System.out.println(n);        &#125;    &#125;&#125;\n\n数组操作java里面的多维数组可以每个数组里面的元素个数不相同\nint[][] ns = &#123;    &#123; 1, 2, 3, 4 &#125;,    &#123; 5, 6 &#125;,    &#123; 7, 8, 9 &#125;&#125;;\n\n打印二维数组\nfor (int[] arr : ns) &#123;    for (int n : arr) &#123;        System.out.print(n);        System.out.print(&#x27;, &#x27;);    &#125;    System.out.println();&#125;\n\n使用Arrays.deepToString()打印数组\n// 需要导包import java.util.Arrays;System.out.println(Arrays.deepToString(ns));/** 输出结果* [[1, 2, 3, 4], [5, 6], [7, 8, 9]]*/\n\n三维数组的定义\nint[][][] ns = &#123;    &#123;        &#123;1, 2, 3&#125;,        &#123;4, 5, 6&#125;,        &#123;7, 8, 9&#125;    &#125;,    &#123;        &#123;10, 11&#125;,        &#123;12, 13&#125;    &#125;,    &#123;        &#123;14, 15, 16&#125;,        &#123;17, 18&#125;    &#125;&#125;;\n\n面向对象编程","categories":["笔记","java"],"tags":["OOP","java"]},{"title":"C语言-图书馆管理系统","url":"/2022/08/10/C%E8%AF%AD%E8%A8%80-%E5%9B%BE%E4%B9%A6%E9%A6%86%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/","content":"大一C语言写的大作业\n\n\n功能分析管理员：\n\n学生\n\n程序代码#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;#include&lt;string.h&gt;#include&lt;Windows.h&gt;#define IDLength 12 // 学号长度#define MAXNUM 5 // 最多可借阅书籍数struct bookInfo&#123;\tchar name[21+1]; // 书名\tdouble price; // 书的价格\tint current_num; // 书籍当前数量\tint num; // 书籍原有的数量\tchar author[21+1]; // 书的作者\tchar ISBN[13+1]; // 书的ISBN\tint flag; // 判断是否有书被借出&#125;;struct Book&#123;\tstruct bookInfo data;\tstruct Book* next;&#125;;struct studentInfo&#123;\tchar ID[IDLength + 1]; // 学生的学号\tint current_number; // 当前借阅的书籍数\tstruct bookInfo bookinfo[5]; // 最大可借阅书籍数&#125;;struct Student&#123;\tstruct studentInfo student;\tstruct Student* next;&#125;;/*\t下面的是管理员功能所用的函数*/struct Book* creatBookHead();struct Book* creatBook(struct bookInfo data);void insertBookByHead(struct Book* headNode, struct bookInfo data);void printBookList(struct Book* headNode);struct Book* searchBookByName(struct Book* headNode, char* bookname);struct Book* searchBookByISBN(struct Book* headNode, char* bookISBN);void deleteBookByName(struct Book* nodeHead, char* bookName);void deleteBookByISBN(struct Book* nodeHead, char* bookISBN);void saveBookToFile(const char* filename, struct Book* headNode);void readBookFromFile(const char* filename, struct Book* headNode);void managerMenu();int mannagerKeyMenu();/*\t下面的是学生功能所用的函数*/struct Student* creatStudentHead();struct Student* creatStudent(struct studentInfo student);void insertStudentByHead(struct Student* headNode, struct studentInfo student);struct Student* searchStudentByID(struct Student* headNode, char* ID);void deleteStuByName(struct Student* nodeHead, char* bookName, char* ID);void saveStudentToFile(const char* filename, struct Student* headNode);void readStudentFromFile(const char* filename, struct Student* headNode);void studentMenu();int studentKeyMenu();// 主界面函数void mainMenu();void mainKeyDown();// 定义的全局变量struct Book* list;struct Student* STU;int main()&#123;\tSTU = creatStudentHead();  // 储存学生信息的链表\tlist = creatBookHead(); // 储存书籍信息的链表\treadBookFromFile(&quot;Book.txt&quot;, list);\treadStudentFromFile(&quot;Student.txt&quot;, STU);\twhile (1)\t&#123;\t\tmainKeyDown();\t\tsystem(&quot;pause&quot;);\t\tsystem(&quot;cls&quot;);\t&#125;\treturn 0;&#125;// 创建表头-&gt;Bookstruct Book* creatBookHead()&#123;\tstruct Book* headNode = (struct Book*)malloc(sizeof(struct Book));\theadNode-&gt;next = NULL;\treturn headNode;&#125;// 创建节点-&gt;Bookstruct Book* creatBook(struct bookInfo data)&#123;\tstruct Book* newNode = (struct Book*)malloc(sizeof(struct Book));\tnewNode-&gt;data = data;\tnewNode-&gt;next = NULL;\treturn newNode;&#125;// 表头法插入-&gt;Bookvoid insertBookByHead(struct Book* headNode, struct bookInfo data)&#123;\tstruct Book* newNode = creatBook(data);\tnewNode-&gt;next = headNode-&gt;next;\theadNode-&gt;next = newNode;&#125;// 打印链表-&gt;Bookvoid printBookList(struct Book* headNode)&#123;\tstruct Book* Pmove = headNode-&gt;next;\tprintf(&quot;书名            作者            ISBN            价格    数量\\n&quot;);\twhile (Pmove != NULL)\t&#123;\t\tprintf(&quot;%-14s\\t%-14s\\t%-13s\\t%.1lf\\t%d\\n&quot;, Pmove-&gt;data.name, Pmove-&gt;data.author, Pmove-&gt;data.ISBN, Pmove-&gt;data.price, Pmove-&gt;data.current_num);\t\tPmove = Pmove-&gt;next;\t&#125;&#125;// 指定查找 -&gt;书名struct Book* searchBookByName(struct Book* headNode, char* bookname)&#123;\tstruct Book* posNode = headNode-&gt;next;\twhile (posNode != NULL &amp;&amp; strcmp(posNode-&gt;data.name, bookname))\t&#123;\t\tposNode = posNode-&gt;next;\t&#125;\treturn posNode;&#125;// 指定查找 -&gt; ISBNstruct Book* searchBookByISBN(struct Book* headNode, char* bookISBN)&#123;\tstruct Book* posNode = headNode-&gt;next;\twhile (posNode != NULL &amp;&amp; strcmp(posNode-&gt;data.ISBN, bookISBN))\t&#123;\t\tposNode = posNode-&gt;next;\t&#125;\treturn posNode;&#125;// 指定删除 -&gt; 书名void deleteBookByName(struct Book* nodeHead, char* bookName)&#123;\tstruct Book* posLeftNode = nodeHead;\tstruct Book* posNode = nodeHead-&gt;next;\twhile (posNode != NULL &amp;&amp; strcmp(posNode-&gt;data.name, bookName))\t&#123;\t\tposLeftNode = posNode;\t\tposNode = posLeftNode-&gt;next;\t&#125;\tposLeftNode-&gt;next = posNode-&gt;next;\tfree(posNode);\tposNode = NULL;&#125;// 指定删除 -&gt; ISBNvoid deleteBookByISBN(struct Book* nodeHead, char* bookISBN)&#123;\tstruct Book* posLeftNode = nodeHead;\tstruct Book* posNode = nodeHead-&gt;next;\twhile (posNode != NULL &amp;&amp; strcmp(posNode-&gt;data.ISBN, bookISBN))\t&#123;\t\tposLeftNode = posNode;\t\tposNode = posLeftNode-&gt;next;\t&#125;\tposLeftNode-&gt;next = posNode-&gt;next;\tfree(posNode);\tposNode = NULL;&#125;// 指文件操作 存操作void saveBookToFile(const char* filename, struct Book* headNode)&#123;\tFILE* fp = fopen(filename, &quot;w&quot;);\tstruct Book* Pmove = headNode-&gt;next;\twhile (Pmove != NULL)\t&#123;\t\tfprintf(fp, &quot;%s\\t%s\\t%s\\t%.2lf\\t%d\\t%d\\t%d\\n&quot;, Pmove-&gt;data.name, Pmove-&gt;data.author, Pmove-&gt;data.ISBN, Pmove-&gt;data.price, Pmove-&gt;data.current_num, Pmove-&gt;data.flag, Pmove-&gt;data.num);\t\tPmove = Pmove-&gt;next;\t&#125;\tfclose(fp);&#125;// 写操作void readBookFromFile(const char* filename, struct Book* headNode)&#123;\tFILE* fp = fopen(filename, &quot;r&quot;);\tif (fp == NULL) // 第一次打开时的情况\t&#123;\t\tfp = fopen(filename, &quot;w+&quot;);\t&#125;\tstruct bookInfo tempData;\twhile (fscanf(fp, &quot;%s\\t%s\\t%s\\t%lf\\t%d\\t%d\\t%d\\n&quot;, tempData.name, tempData.author, tempData.ISBN, &amp;tempData.price, &amp;tempData.current_num, &amp;tempData.flag, &amp;tempData.num) != EOF)\t&#123;\t\tinsertBookByHead(list, tempData);\t&#125;\tfclose(fp);&#125;// 创建表头-&gt;Studentstruct Student* creatStudentHead()&#123;\tstruct Student* headNode = (struct Student*)malloc(sizeof(struct Student));\theadNode-&gt;next = NULL;\treturn headNode;&#125;// 创建节点-&gt;Studentstruct Student* creatStudent(struct studentInfo student)&#123;\tstruct Student* newNode = (struct Student*)malloc(sizeof(struct Student));\tnewNode-&gt;student = student;\tnewNode-&gt;next = NULL;\treturn newNode;&#125;// 表头法插入-&gt;Studentvoid insertStudentByHead(struct Student* headNode, struct studentInfo student)&#123;\tstruct Student* newNode = creatStudent(student);\tnewNode-&gt;next = headNode-&gt;next;\theadNode-&gt;next = newNode;&#125;// 查找学生 -&gt; IDstruct Student* searchStudentByID(struct Student* headNode, char* ID)&#123;\tstruct Student* posNode = headNode-&gt;next;\twhile (posNode != NULL &amp;&amp; strcmp(posNode-&gt;student.ID, ID))\t&#123;\t\tposNode = posNode-&gt;next;\t&#125;\treturn posNode;&#125;// 删除学生所借阅的书籍void deleteStuByName(struct Student* nodeHead, char* bookName, char* ID)&#123;\tstruct Student* Node = searchStudentByID(nodeHead, ID);\tstruct bookInfo temp = &#123; &quot;\\0&quot; &#125;;\tfor (int i = 0; i &lt; Node-&gt;student.current_number; i++)\t&#123;\t\tif (strcmp(Node-&gt;student.bookinfo[i].name, bookName))\t\t&#123;\t\t\tif (i == Node-&gt;student.current_number - 1)\t\t\t&#123;\t\t\t\tNode-&gt;student.bookinfo[i] = temp;\t\t\t&#125;\t\t\telse\t\t\t&#123;\t\t\t\tfor (int j = i; j &lt; Node-&gt;student.current_number; )\t\t\t\t&#123;\t\t\t\t\tNode-&gt;student.bookinfo[j] = Node-&gt;student.bookinfo[j++];\t\t\t\t&#125;\t\t\t&#125;\t\t&#125;\t&#125;\tNode-&gt;student.current_number--;&#125;// 存操作void saveStudentToFile(const char* filename, struct Student* headNode)&#123;\tFILE* fp = fopen(filename, &quot;w&quot;);\tstruct Student* Pmove = headNode-&gt;next;\twhile (Pmove != NULL)\t&#123;\t\tfprintf(fp, &quot;%s\\t%d\\n&quot;, Pmove-&gt;student.ID, Pmove-&gt;student.current_number);\t\tfor (int i = 0; i &lt; Pmove-&gt;student.current_number; i++)\t\t&#123;\t\t\tfprintf(fp, &quot;%s\\t%s\\t%s\\t%.1lf\\t%d\\t%d\\t%d\\n&quot;, Pmove-&gt;student.bookinfo[i].name, Pmove-&gt;student.bookinfo[i].author, Pmove-&gt;student.bookinfo[i].ISBN, Pmove-&gt;student.bookinfo[i].price, Pmove-&gt;student.bookinfo[i].current_num, Pmove-&gt;student.bookinfo[i].flag, Pmove-&gt;student.bookinfo[i].num);\t\t&#125;\t\tPmove = Pmove-&gt;next;\t&#125;\tfclose(fp);&#125;// 写操作void readStudentFromFile(const char* filename, struct Student* headNode)&#123;\tFILE* fp = fopen(filename, &quot;r&quot;);\tif (fp == NULL) // 第一次打开时的情况\t&#123;\t\tfp = fopen(filename, &quot;w+&quot;);\t&#125;\tstruct studentInfo tempData;\twhile (fscanf(fp, &quot;%s\\t%d\\n&quot;, tempData.ID, &amp;tempData.current_number) != EOF)\t&#123;\t\tfor (int i = 0; i &lt; tempData.current_number; i++)\t\t&#123;\t\t\tfscanf(fp, &quot;%s\\t%s\\t%s\\t%lf\\t%d\\t%d\\t%d\\n&quot;, tempData.bookinfo[i].name, tempData.bookinfo[i].author, tempData.bookinfo[i].ISBN, &amp;tempData.bookinfo[i].price, &amp;tempData.bookinfo[i].current_num, &amp;tempData.bookinfo[i].flag, &amp;tempData.bookinfo[i].num);\t\t&#125;\t\tinsertStudentByHead(STU, tempData);\t&#125;\tfclose(fp);&#125;// 主界面void mainMenu()&#123;\tprintf(&quot; ============================================================\\n&quot;);\tprintf(&quot; |                                                          |\\n&quot;);\tprintf(&quot; |                   欢迎使用图书管理系统                   |\\n&quot;);\tprintf(&quot; |                                                          |\\n&quot;);\tprintf(&quot; |                                                          |\\n&quot;);\tprintf(&quot; |     [1].管理员登陆    [2].学生登陆    [0].退出系统       |\\n&quot;);\tprintf(&quot; |                                                          |\\n&quot;);\tprintf(&quot; ============================================================\\n&quot;);\tprintf(&quot;请选择：&quot;);&#125;// 管理员界面void managerMenu()&#123;\tprintf(&quot; ============================================================\\n&quot;);\tprintf(&quot; |                       管理员端                           |\\n&quot;);\tprintf(&quot; |                                                          |\\n&quot;);\tprintf(&quot; |                    [1].新书信息录入                      |\\n&quot;);\tprintf(&quot; |                                                          |\\n&quot;);\tprintf(&quot; |                    [2].查看所有图书信息                  |\\n&quot;);\tprintf(&quot; |                                                          |\\n&quot;);\tprintf(&quot; |                    [3].图书信息查询                      |\\n&quot;);\tprintf(&quot; |                                                          |\\n&quot;);\tprintf(&quot; |                    [4].图书信息删除                      |\\n&quot;);\tprintf(&quot; |                                                          |\\n&quot;);\tprintf(&quot; |                    [5].返回主菜单                        |\\n&quot;);\tprintf(&quot; |                                                          |\\n&quot;);\tprintf(&quot; |                    [0].退出系统                          |\\n&quot;);\tprintf(&quot; |                                                          |\\n&quot;);\tprintf(&quot; ============================================================\\n&quot;);\tprintf(&quot;请选择：&quot;);&#125;// 管理员交互界面int mannagerKeyMenu()&#123;\tint tempkey = 0;\tstruct bookInfo tempBook; // 临时用来储存管理员输入的书籍信息\tstruct Book* result = NULL; // 用来接受搜索书籍信息的结果\tscanf(&quot;%d&quot;, &amp;tempkey);\tsystem(&quot;cls&quot;);\tswitch (tempkey)\t&#123;\tcase 1: // 登记图书\t&#123;\t\tprintf(&quot;\\a\\n请输入新图书信息：\\n\\n&quot;);\t\tprintf(&quot;====================================\\n&quot;);\t\tprintf(&quot;书名    作者    ISBN    价格    数量\\n&quot;);\t\tprintf(&quot;------------------------------------\\n&quot;);\t\tscanf(&quot;%s %s %s %lf %d&quot;, tempBook.name, tempBook.author, tempBook.ISBN, &amp;tempBook.price, &amp;tempBook.num);\t\ttempBook.flag = 0; // flag 赋值为0表示这个书籍没有被借出过，所有书籍都在库\t\ttempBook.current_num = tempBook.num; // 书籍刚入库时，现有的书籍数 和 原有书籍数时相同的\t\tinsertBookByHead(list, tempBook); // 连接到链表list\t\tsaveBookToFile(&quot;Book.txt&quot;, list); // 保存到文件\t\twhile (1) // 这个循环来实现重复录入书籍\t\t&#123;\t\t\tprintf(&quot;\\a&quot;);\t\t\tprintf(&quot; -------------------------------------------------------\\n&quot;);\t\t\tprintf(&quot;            [1].继续录入    [2].结束录入                \\n&quot;);\t\t\tprintf(&quot; -------------------------------------------------------\\n&quot;);\t\t\tint tempcase;\t\t\tscanf(&quot;%d&quot;, &amp;tempcase);\t\t\tif (tempcase == 1)\t\t\t&#123;\t\t\t\tprintf(&quot;\\n请输入新图书信息：\\n\\n&quot;);\t\t\t\tprintf(&quot;====================================\\n&quot;);\t\t\t\tprintf(&quot;书名    作者    ISBN    价格    数量\\n&quot;);\t\t\t\tprintf(&quot;------------------------------------\\n&quot;);\t\t\t\tscanf(&quot;%s %s %s %lf %d&quot;, tempBook.name, tempBook.author, tempBook.ISBN, &amp;tempBook.price, &amp;tempBook.num);\t\t\t\ttempBook.flag = 0;\t\t\t\ttempBook.current_num = tempBook.num;\t\t\t\tinsertBookByHead(list, tempBook);\t\t\t\tsaveBookToFile(&quot;Book.txt&quot;, list);\t\t\t&#125;\t\t\telse\t\t\t&#123;\t\t\t\tbreak;\t\t\t&#125;\t\t&#125;\t&#125;\tbreak;\tcase 2: // 查看图书信息\t\tprintf(&quot;\\a\\t图书信息如下：\\n\\n&quot;);\t\tprintBookList(list); // 打印书籍信息到屏幕\t\tbreak;\tcase 3: // 图书信息查询\t&#123;\tC:\tprintf(&quot; ============================================================\\n&quot;);\t\tprintf(&quot; |                                                          |\\n&quot;);\t\tprintf(&quot; |                    [1].按图书名称查询                    |\\n&quot;);\t\tprintf(&quot; |                                                          |\\n&quot;);\t\tprintf(&quot; |                    [2].按图书编号查询                    |\\n&quot;);\t\tprintf(&quot; |                                                          |\\n&quot;);\t\tprintf(&quot; |                    [3].返回上一级菜单                    |\\n&quot;);\t\tprintf(&quot; |                                                          |\\n&quot;);\t\tprintf(&quot; ============================================================\\n&quot;);\t\tprintf(&quot;请选择：&quot;);\t\tint tempcase = 0;\t\tscanf(&quot;%d&quot;, &amp;tempcase);\t\tsystem(&quot;cls&quot;);\t\tswitch (tempcase)\t\t&#123;\t\tcase 1: // 图书名字查询\t\tA:\tprintf(&quot;请输入书籍名：&quot;);\t\t\tscanf(&quot;%s&quot;, tempBook.name);\t\t\tresult = searchBookByName(list, tempBook.name); // 接收查询结果 \t\t\tif (result == NULL)\t\t\t&#123;\t\t\t\tprintf(&quot;\\a\\n未找相关的书籍！\\n\\n&quot;);\t\t\t\tprintf(&quot; -------------------------------------------------------\\n&quot;);\t\t\t\tprintf(&quot;    [1].继续搜索   [2].返回上一级菜单   [0].退出系统    \\n&quot;);\t\t\t\tprintf(&quot; -------------------------------------------------------\\n&quot;);\t\t\t\tprintf(&quot;请选择：&quot;);\t\t\t\tint temp = 0;\t\t\t\tscanf(&quot;%d&quot;, &amp;temp);\t\t\t\tsystem(&quot;cls&quot;);\t\t\t\tswitch (temp)\t\t\t\t&#123;\t\t\t\tcase 1: //\t\t\t\t\tgoto A;\t\t\t\t\tbreak;\t\t\t\tcase 2: // 返回上一级菜单 -&gt; 查询书籍菜单\t\t\t\t\tgoto C;\t\t\t\t\tbreak;\t\t\t\tcase 0: // 结束整个程序\t\t\t\t\tsystem(&quot;cls&quot;);\t\t\t\t\tprintf(&quot; ------------------------------------------------------------\\n&quot;);\t\t\t\t\tprintf(&quot;                   -=  感谢使用，再见！ =-                   \\n&quot;);\t\t\t\t\tprintf(&quot; ------------------------------------------------------------\\n&quot;);\t\t\t\t\tSleep(500);\t\t\t\t\texit(0);\t\t\t\t\tbreak;\t\t\t\t&#125;\t\t\t&#125;\t\t\telse\t\t\t&#123;\t\t\t\tprintf(&quot;\\a\\n书籍信息如下:\\n\\n&quot;);\t\t\t\tprintf(&quot;书名        作者        ISBN            价格    数量\\n&quot;);\t\t\t\tprintf(&quot;%-10s  %-10s\\t%-13s\\t%.1lf\\t%d\\n&quot;, result-&gt;data.name, result-&gt;data.author, result-&gt;data.ISBN, result-&gt;data.price, result-&gt;data.current_num);\t\t\t&#125;\t\t\tbreak;\t\tcase 2: // 通过ISBN来查询书籍\t\tB:\tprintf(&quot;请输入书籍的ISBN号：&quot;);\t\t\tscanf(&quot;%s&quot;, tempBook.ISBN);\t\t\tresult = searchBookByISBN(list, tempBook.ISBN); // 接收查询结果\t\t\tif (result == NULL)\t\t\t&#123;\t\t\t\tprintf(&quot;\\a\\n未找到相关书籍！\\n\\n&quot;);\t\t\t\tprintf(&quot; -------------------------------------------------------\\n&quot;);\t\t\t\tprintf(&quot;    [1].继续搜索   [2].返回上一级菜单   [0].退出系统    \\n&quot;);\t\t\t\tprintf(&quot; -------------------------------------------------------\\n&quot;);\t\t\t\tprintf(&quot;请选择：&quot;);\t\t\t\tint temp = 0;\t\t\t\tscanf(&quot;%d&quot;, &amp;temp);\t\t\t\tsystem(&quot;cls&quot;);\t\t\t\tswitch (temp)\t\t\t\t&#123;\t\t\t\tcase 1: // 继续搜索\t\t\t\t\tgoto B;\t\t\t\t\tbreak;\t\t\t\tcase 2: // 返回上一级 -&gt; 查询书籍界面\t\t\t\t\tgoto C;\t\t\t\t\tbreak;\t\t\t\tcase 0: // 结束整个程序\t\t\t\t\tsystem(&quot;cls&quot;);\t\t\t\t\tprintf(&quot; ------------------------------------------------------------\\n&quot;);\t\t\t\t\tprintf(&quot;                   -=  感谢使用，再见！ =-                   \\n&quot;);\t\t\t\t\tprintf(&quot; ------------------------------------------------------------\\n&quot;);\t\t\t\t\tSleep(500);\t\t\t\t\texit(0);\t\t\t\t\tbreak;\t\t\t\t&#125;\t\t\t&#125;\t\t\telse\t\t\t&#123;\t\t\t\tprintf(&quot;\\a\\n书籍信息如下:\\n\\n&quot;);\t\t\t\tprintf(&quot;书名        作者        ISBN            价格    数量\\n&quot;);\t\t\t\tprintf(&quot;%-10s  %-10s\\t%-13s\\t%.1lf\\t%d\\n&quot;, result-&gt;data.name, result-&gt;data.author, result-&gt;data.ISBN, result-&gt;data.price, result-&gt;data.current_num);\t\t\t&#125;\t\t\tbreak;\t\tcase 3:\t\t\treturn 0; // 直接结束此函数，成功回到了上一界面\t\t\tbreak;\t\t&#125;\t&#125;\tbreak;\tcase 4: // 图书信息删除\t&#123;\tD:\tprintf(&quot; ============================================================\\n&quot;);\t\tprintf(&quot; |                                                          |\\n&quot;);\t\tprintf(&quot; |                    [1].按图书名称删除                    |\\n&quot;);\t\tprintf(&quot; |                                                          |\\n&quot;);\t\tprintf(&quot; |                    [2].按图书编号删除                    |\\n&quot;);\t\tprintf(&quot; |                                                          |\\n&quot;);\t\tprintf(&quot; |                    [3].返回上一级菜单                    |\\n&quot;);\t\tprintf(&quot; |                                                          |\\n&quot;);\t\tprintf(&quot; ============================================================\\n&quot;);\t\tprintf(&quot;请选择：&quot;);\t\tint tempcase = 0;\t\tscanf(&quot;%d&quot;, &amp;tempcase);\t\tsystem(&quot;cls&quot;);\t\tswitch (tempcase)\t\t&#123;\t\tcase 1: // 书名法删除\t\tE:\tprintf(&quot;请输入书籍名：&quot;);\t\t\tscanf(&quot;%s&quot;, tempBook.name);\t\t\tresult = searchBookByName(list, tempBook.name); // 接收结果\t\t\tif (result == NULL)\t\t\t&#123;\t\t\t\tprintf(&quot;\\a\\n未找到相关的书籍！\\n\\n&quot;);\t\t\t\tprintf(&quot; -------------------------------------------------------\\n&quot;);\t\t\t\tprintf(&quot;    [1].继续删除   [2].返回上一级菜单   [0].退出系统    \\n&quot;);\t\t\t\tprintf(&quot; -------------------------------------------------------\\n&quot;);\t\t\t\tprintf(&quot;请选择：&quot;);\t\t\t\tint temp = 0;\t\t\t\tscanf(&quot;%d&quot;, &amp;temp);\t\t\t\tsystem(&quot;cls&quot;);\t\t\t\tswitch (temp)\t\t\t\t&#123;\t\t\t\tcase 1: // 继续\t\t\t\t\tgoto E;\t\t\t\t\tbreak;\t\t\t\tcase 2: // 回到-&gt;删除菜单\t\t\t\t\tgoto D;\t\t\t\t\tbreak;\t\t\t\tcase 0: // 结束程序\t\t\t\t\tsystem(&quot;cls&quot;);\t\t\t\t\tprintf(&quot; ------------------------------------------------------------\\n&quot;);\t\t\t\t\tprintf(&quot;                   -=  感谢使用，再见！ =-                   \\n&quot;);\t\t\t\t\tprintf(&quot; ------------------------------------------------------------\\n&quot;);\t\t\t\t\tSleep(500);\t\t\t\t\texit(0);\t\t\t\t\tbreak;\t\t\t\t&#125;\t\t\t&#125;\t\t\telse\t\t\t&#123;\t\t\t\tif (result-&gt;data.flag == 1) // 书籍标记 flag 为1 表示有图书未还，不能删除书籍\t\t\t\t&#123;\t\t\t\t\tprintf(&quot;\\a \\n\\n此书正在出借，无法删除信息！\\n\\n&quot;);\t\t\t\t\tprintf(&quot; -------------------------------------------------------\\n&quot;);\t\t\t\t\tprintf(&quot;   [1].重新搜索  [2].返回管理员功能菜单  [0].退出系统   \\n&quot;);\t\t\t\t\tprintf(&quot; -------------------------------------------------------\\n&quot;);\t\t\t\t\tprintf(&quot;请选择：&quot;);\t\t\t\t\tint tempkey = 0;\t\t\t\t\tscanf(&quot;%d&quot;, &amp;tempkey);\t\t\t\t\tsystem(&quot;cls&quot;);\t\t\t\t\tswitch (tempkey)\t\t\t\t\t&#123;\t\t\t\t\tcase 1:\t\t\t\t\t\tgoto E;\t\t\t\t\t\tbreak;\t\t\t\t\tcase 2:\t\t\t\t\t\treturn 0;\t\t\t\t\t\tbreak;\t\t\t\t\tcase 3:\t\t\t\t\t\tsystem(&quot;cls&quot;);\t\t\t\t\t\tprintf(&quot; ------------------------------------------------------------\\n&quot;);\t\t\t\t\t\tprintf(&quot;                   -=  感谢使用，再见！ =-                   \\n&quot;);\t\t\t\t\t\tprintf(&quot; ------------------------------------------------------------\\n&quot;);\t\t\t\t\t\tSleep(500);\t\t\t\t\t\texit(0);\t\t\t\t\t\tbreak;\t\t\t\t\t&#125;\t\t\t\t&#125;\t\t\t\telse\t\t\t\t&#123;\t\t\t\t\tprintf(&quot;\\a\\n\\n  确认删除？\\n&quot;);\t\t\t\t\tprintf(&quot; -------------------------------------------------------\\n&quot;);\t\t\t\t\tprintf(&quot;                 [1].是      [2].否                     \\n&quot;);\t\t\t\t\tprintf(&quot; -------------------------------------------------------\\n&quot;);\t\t\t\t\tint tempkey = 0;\t\t\t\t\tscanf(&quot;%d&quot;, &amp;tempkey);\t\t\t\t\tif (tempkey == 1)\t\t\t\t\t&#123;\t\t\t\t\t\tprintf(&quot;\\a删除成功\\n&quot;);\t\t\t\t\t\tdeleteBookByName(list, tempBook.name);\t\t\t\t\t\tsaveBookToFile(&quot;Book.txt&quot;, list);\t\t\t\t\t&#125;\t\t\t\t&#125;\t\t\t&#125;\t\t\tbreak;\t\tcase 2: // ISBN法删除\t\tF:\tprintf(&quot;请输入书籍的ISBN：&quot;);\t\t\tscanf(&quot;%s&quot;, tempBook.ISBN);\t\t\tresult = searchBookByISBN(list, tempBook.ISBN); // 接收结果\t\t\tif (result == NULL)\t\t\t&#123;\t\t\t\tprintf(&quot;\\a\\n未找到相关的书籍！\\n\\n&quot;);\t\t\t\tprintf(&quot; -------------------------------------------------------\\n&quot;);\t\t\t\tprintf(&quot;    [1].继续删除   [2].返回上一级菜单   [0].退出系统    \\n&quot;);\t\t\t\tprintf(&quot; -------------------------------------------------------\\n&quot;);\t\t\t\tprintf(&quot;请选择：&quot;);\t\t\t\tint temp = 0;\t\t\t\tscanf(&quot;%d&quot;, &amp;temp);\t\t\t\tsystem(&quot;cls&quot;);\t\t\t\tswitch (temp)\t\t\t\t&#123;\t\t\t\tcase 1:\t\t\t\t\tgoto F;\t\t\t\t\tbreak;\t\t\t\tcase 2:\t\t\t\t\tgoto D;\t\t\t\t\tbreak;\t\t\t\tcase 0:\t\t\t\t\tsystem(&quot;cls&quot;);\t\t\t\t\tprintf(&quot; ------------------------------------------------------------\\n&quot;);\t\t\t\t\tprintf(&quot;                   -=  感谢使用，再见！ =-                   \\n&quot;);\t\t\t\t\tprintf(&quot; ------------------------------------------------------------\\n&quot;);\t\t\t\t\tSleep(500);\t\t\t\t\texit(0);\t\t\t\t\tbreak;\t\t\t\t&#125;\t\t\t&#125;\t\t\telse\t\t\t&#123;\t\t\t\tif (result-&gt;data.flag == 1) // 有书籍未还回\t\t\t\t&#123;\t\t\t\t\tprintf(&quot;\\a \\n\\n此书正在出借，无法删除信息！\\n\\n&quot;);\t\t\t\t\tprintf(&quot; -------------------------------------------------------\\n&quot;);\t\t\t\t\tprintf(&quot;   [1].重新搜索  [2].返回管理员功能菜单  [0].退出系统   \\n&quot;);\t\t\t\t\tprintf(&quot; -------------------------------------------------------\\n&quot;);\t\t\t\t\tprintf(&quot;请选择：&quot;);\t\t\t\t\tint tempkey = 0;\t\t\t\t\tscanf(&quot;%d&quot;, &amp;tempkey);\t\t\t\t\tsystem(&quot;cls&quot;);\t\t\t\t\tswitch (tempkey)\t\t\t\t\t&#123;\t\t\t\t\tcase 1:\t\t\t\t\t\tgoto F;\t\t\t\t\t\tbreak;\t\t\t\t\tcase 2:\t\t\t\t\t\treturn 0;\t\t\t\t\t\tbreak;\t\t\t\t\tcase 3:\t\t\t\t\t\tsystem(&quot;cls&quot;);\t\t\t\t\t\tprintf(&quot; ------------------------------------------------------------\\n&quot;);\t\t\t\t\t\tprintf(&quot;                   -=  感谢使用，再见！ =-                   \\n&quot;);\t\t\t\t\t\tprintf(&quot; ------------------------------------------------------------\\n&quot;);\t\t\t\t\t\tSleep(500);\t\t\t\t\t\texit(0);\t\t\t\t\t\tbreak;\t\t\t\t\t&#125;\t\t\t\t&#125;\t\t\t\telse\t\t\t\t&#123;\t\t\t\t\tprintf(&quot;\\a\\n\\n  确认删除？\\n&quot;);\t\t\t\t\tprintf(&quot; -------------------------------------------------------\\n&quot;);\t\t\t\t\tprintf(&quot;                 [1].是      [2].否                     \\n&quot;);\t\t\t\t\tprintf(&quot; -------------------------------------------------------\\n&quot;);\t\t\t\t\tint tempkey = 0;\t\t\t\t\tscanf(&quot;%d&quot;, &amp;tempkey);\t\t\t\t\tif (tempkey == 1)\t\t\t\t\t&#123;\t\t\t\t\t\tprintf(&quot;\\a删除成功\\n&quot;);\t\t\t\t\t\tdeleteBookByISBN(list, tempBook.ISBN);\t\t\t\t\t\tsaveBookToFile(&quot;Book.txt&quot;, list);\t\t\t\t\t&#125;\t\t\t\t&#125;\t\t\t&#125;\t\t\tbreak;\t\tcase 3: // 返回管理员界面\t\t\treturn 0;\t\t\tbreak;\t\t&#125;\t&#125;\tbreak;\tcase 5: // 返回主界面\t\treturn 1; // 这里的返回值在 mainKeyDown() 函数中有作用\t\tbreak;\tcase 0: // 退出系统\t\tsystem(&quot;cls&quot;);\t\tprintf(&quot; ------------------------------------------------------------\\n&quot;);\t\tprintf(&quot;                   -=  感谢使用，再见！ =-                   \\n&quot;);\t\tprintf(&quot; ------------------------------------------------------------\\n&quot;);\t\tSleep(500);\t\texit(0);\t\tbreak;\tdefault:\t\tprintf(&quot;error\\n&quot;);\t\tbreak;\t&#125;\tsystem(&quot;pause&quot;);\tsystem(&quot;cls&quot;);\treturn 0;&#125;// 学生界面void studentMenu()&#123;\tprintf(&quot; ============================================================\\n&quot;);\tprintf(&quot; |                        学生端                            |\\n&quot;);\tprintf(&quot; |                                                          |\\n&quot;);\tprintf(&quot; |                    [1].图书信息查询                      |\\n&quot;);\tprintf(&quot; |                                                          |\\n&quot;);\tprintf(&quot; |                    [2].书籍借阅                          |\\n&quot;);\tprintf(&quot; |                                                          |\\n&quot;);\tprintf(&quot; |                    [3].书籍归还                          |\\n&quot;);\tprintf(&quot; |                                                          |\\n&quot;);\tprintf(&quot; |                    [4].返回主菜单                        |\\n&quot;);\tprintf(&quot; |                                                          |\\n&quot;);\tprintf(&quot; |                    [0].退出系统                          |\\n&quot;);\tprintf(&quot; |                                                          |\\n&quot;);\tprintf(&quot; ============================================================\\n&quot;);\tprintf(&quot;请选择：&quot;);&#125;// 学生交互界面int studentKeyMenu()&#123;\tint tempkey = 0;\tstruct bookInfo tempBook;\tstruct Book* result = NULL; // 用来存放查询书籍信息的结果\tstruct Student* outcome = NULL; // 用来存放查询学生信息的结果\tscanf(&quot;%d&quot;, &amp;tempkey);\tsystem(&quot;cls&quot;);\tswitch (tempkey)\t&#123;\tcase 1: // 图书信息查询\t&#123;\tC:\tprintf(&quot; ============================================================\\n&quot;);\t\tprintf(&quot; |                                                          |\\n&quot;);\t\tprintf(&quot; |                    [1].按图书名称查询                    |\\n&quot;);\t\tprintf(&quot; |                                                          |\\n&quot;);\t\tprintf(&quot; |                    [2].按图书编号查询                    |\\n&quot;);\t\tprintf(&quot; |                                                          |\\n&quot;);\t\tprintf(&quot; |                    [3].返回上一级菜单                    |\\n&quot;);\t\tprintf(&quot; |                                                          |\\n&quot;);\t\tprintf(&quot; ============================================================\\n&quot;);\t\tprintf(&quot;请选择：&quot;);\t\tint tempcase = 0;\t\tscanf(&quot;%d&quot;, &amp;tempcase);\t\tsystem(&quot;cls&quot;);\t\tswitch (tempcase)\t\t&#123;\t\tcase 1:\t\tA:\tprintf(&quot;请输入书籍名：&quot;);\t\t\tscanf(&quot;%s&quot;, tempBook.name);\t\t\tresult = searchBookByName(list, tempBook.name);\t\t\tif (result == NULL)\t\t\t&#123;\t\t\t\tprintf(&quot;\\a\\n未找相关的书籍！\\n\\n&quot;);\t\t\t\tprintf(&quot; -------------------------------------------------------\\n&quot;);\t\t\t\tprintf(&quot;    [1].继续搜索   [2].返回上一级菜单   [0].退出系统    \\n&quot;);\t\t\t\tprintf(&quot; -------------------------------------------------------\\n&quot;);\t\t\t\tprintf(&quot;请选择：&quot;);\t\t\t\tint temp = 0;\t\t\t\tscanf(&quot;%d&quot;, &amp;temp);\t\t\t\tsystem(&quot;cls&quot;);\t\t\t\tswitch (temp)\t\t\t\t&#123;\t\t\t\tcase 1:\t\t\t\t\tgoto A;\t\t\t\t\tbreak;\t\t\t\tcase 2:\t\t\t\t\tgoto C;\t\t\t\t\tbreak;\t\t\t\tcase 0:\t\t\t\t\tsystem(&quot;cls&quot;);\t\t\t\t\tprintf(&quot; ------------------------------------------------------------\\n&quot;);\t\t\t\t\tprintf(&quot;                   -=  感谢使用，再见！ =-                   \\n&quot;);\t\t\t\t\tprintf(&quot; ------------------------------------------------------------\\n&quot;);\t\t\t\t\tSleep(500);\t\t\t\t\texit(0);\t\t\t\t\tbreak;\t\t\t\t&#125;\t\t\t&#125;\t\t\telse\t\t\t&#123;\t\t\t\tprintf(&quot;\\a\\n书籍信息如下:\\n\\n&quot;);\t\t\t\tprintf(&quot;书名        作者        ISBN            价格    数量\\n&quot;);\t\t\t\tprintf(&quot;%-10s  %-10s\\t%-13s\\t%.1lf\\t%d\\n&quot;, result-&gt;data.name, result-&gt;data.author, result-&gt;data.ISBN, result-&gt;data.price, result-&gt;data.num);\t\t\t&#125;\t\t\tbreak;\t\tcase 2:\t\tB:\tprintf(&quot;请输入书籍的ISBN号：&quot;);\t\t\tscanf(&quot;%s&quot;, tempBook.ISBN);\t\t\tresult = searchBookByISBN(list, tempBook.ISBN);\t\t\tif (result == NULL)\t\t\t&#123;\t\t\t\tprintf(&quot;\\a\\n未找到相关书籍！\\n\\n&quot;);\t\t\t\tprintf(&quot; -------------------------------------------------------\\n&quot;);\t\t\t\tprintf(&quot;    [1].继续搜索   [2].返回上一级菜单   [0].退出系统    \\n&quot;);\t\t\t\tprintf(&quot; -------------------------------------------------------\\n&quot;);\t\t\t\tprintf(&quot;请选择：&quot;);\t\t\t\tint temp = 0;\t\t\t\tscanf(&quot;%d&quot;, &amp;temp);\t\t\t\tsystem(&quot;cls&quot;);\t\t\t\tswitch (temp)\t\t\t\t&#123;\t\t\t\tcase 1:\t\t\t\t\tgoto B;\t\t\t\t\tbreak;\t\t\t\tcase 2:\t\t\t\t\tgoto C;\t\t\t\t\tbreak;\t\t\t\tcase 0:\t\t\t\t\tsystem(&quot;cls&quot;);\t\t\t\t\tprintf(&quot; ------------------------------------------------------------\\n&quot;);\t\t\t\t\tprintf(&quot;                   -=  感谢使用，再见！ =-                   \\n&quot;);\t\t\t\t\tprintf(&quot; ------------------------------------------------------------\\n&quot;);\t\t\t\t\tSleep(500);\t\t\t\t\texit(0);\t\t\t\t\tbreak;\t\t\t\t&#125;\t\t\t&#125;\t\t\telse\t\t\t&#123;\t\t\t\tprintf(&quot;\\a\\n书籍信息如下:\\n\\n&quot;);\t\t\t\tprintf(&quot;书名        作者        ISBN            价格    数量\\n&quot;);\t\t\t\tprintf(&quot;%-10s  %-10s\\t%-13s\\t%.1lf\\t%d\\n&quot;, result-&gt;data.name, result-&gt;data.author, result-&gt;data.ISBN, result-&gt;data.price, result-&gt;data.num);\t\t\t&#125;\t\t\tbreak;\t\t\tbreak;\t\tcase 3:\t\t\treturn 0; // 直接结束此函数，成功回到了上一界面\t\t\tbreak;\t\t&#125;\t&#125;\tbreak;\tcase 2: // 图书借阅\t&#123;\tD:\tprintf(&quot; ============================================================\\n&quot;);\t\tprintf(&quot; |                                                          |\\n&quot;);\t\tprintf(&quot; |                    [1].按图书名借阅                      |\\n&quot;);\t\tprintf(&quot; |                                                          |\\n&quot;);\t\tprintf(&quot; |                    [2].按图书编号借阅                    |\\n&quot;);\t\tprintf(&quot; |                                                          |\\n&quot;);\t\tprintf(&quot; |                    [3].返回上一级菜单                    |\\n&quot;);\t\tprintf(&quot; |                                                          |\\n&quot;);\t\tprintf(&quot; ============================================================\\n&quot;);\t\tprintf(&quot;请选择：&quot;);\t\tint tempcase = 0;\t\tscanf(&quot;%d&quot;, &amp;tempcase);\t\tsystem(&quot;cls&quot;);\t\tswitch (tempcase)\t\t&#123;\t\tcase 1:\t\tE:\tprintf(&quot;\\n请输入书籍名：&quot;);\t\t\tscanf(&quot;%s&quot;, tempBook.name);\t\t\tresult = searchBookByName(list, tempBook.name);\t\t\tif (result == NULL)\t\t\t&#123;\t\t\t\tprintf(&quot;\\a\\n未找相关的书籍！\\n\\n&quot;);\t\t\t\tprintf(&quot; -------------------------------------------------------\\n&quot;);\t\t\t\tprintf(&quot;    [1].继续搜索   [2].返回上一级菜单   [0].退出系统    \\n&quot;);\t\t\t\tprintf(&quot; -------------------------------------------------------\\n&quot;);\t\t\t\tprintf(&quot;请选择：&quot;);\t\t\t\tint temp = 0;\t\t\t\tscanf(&quot;%d&quot;, &amp;temp);\t\t\t\tsystem(&quot;cls&quot;);\t\t\t\tswitch (temp)\t\t\t\t&#123;\t\t\t\tcase 1:\t\t\t\t\tgoto E;\t\t\t\t\tbreak;\t\t\t\tcase 2:\t\t\t\t\tgoto D;\t\t\t\t\tbreak;\t\t\t\tcase 0:\t\t\t\t\tsystem(&quot;cls&quot;);\t\t\t\t\tprintf(&quot; ------------------------------------------------------------\\n&quot;);\t\t\t\t\tprintf(&quot;                   -=  感谢使用，再见！ =-                   \\n&quot;);\t\t\t\t\tprintf(&quot; ------------------------------------------------------------\\n&quot;);\t\t\t\t\tSleep(500);\t\t\t\t\texit(0);\t\t\t\t\tbreak;\t\t\t\t&#125;\t\t\t&#125;\t\t\telse\t\t\t&#123;\t\t\t\tif (result-&gt;data.current_num &gt; 0)\t\t\t\t&#123;\t\t\t\t\tprintf(&quot;\\a\\n\\n 确定要借阅书籍《%s》？\\n&quot;, result-&gt;data.name);\t\t\t\t\tprintf(&quot; -------------------------------------------------------\\n&quot;);\t\t\t\t\tprintf(&quot;                   [1].是      [0].否                   \\n&quot;);\t\t\t\t\tprintf(&quot; -------------------------------------------------------\\n&quot;);\t\t\t\t\tint a = 0;\t\t\t\t\tscanf(&quot;%d&quot;, &amp;a);\t\t\t\t\tif (a == 1)\t\t\t\t\t&#123;\t\t\t\t\t\tstruct studentInfo tempStudent = &#123;\t\t\t\t\t\t\t&quot;\\0&quot;,\t\t\t\t\t\t\t0,\t\t\t\t\t\t&#125;;\t\t\t\t\t\tprintf(&quot;\\a\\n请输入你的学号：&quot;);\t\t\t\t\t\tscanf(&quot;%s&quot;, tempStudent.ID);\t\t\t\t\t\toutcome = searchStudentByID(STU, tempStudent.ID); // 查找此学生\t\t\t\t\t\tif (outcome == NULL) // 从未借过书\t\t\t\t\t\t&#123;\t\t\t\t\t\t\tresult-&gt;data.flag = 1; // 给图书打上有借出的标记\t\t\t\t\t\t\tresult-&gt;data.current_num--; // 书籍数减一\t\t\t\t\t\t\ttempStudent.bookinfo[0] = result-&gt;data;\t\t\t\t\t\t\ttempStudent.current_number++;\t\t\t\t\t\t\tinsertStudentByHead(STU, tempStudent);\t\t\t\t\t\t\tsaveStudentToFile(&quot;Student.txt&quot;, STU);\t\t\t\t\t\t\tprintf(&quot;\\n借阅成功\\n&quot;);\t\t\t\t\t\t&#125;\t\t\t\t\t\telse if (outcome != NULL &amp;&amp; outcome-&gt;student.current_number &lt; MAXNUM) // 所借书籍数未超过 MAXNUM\t\t\t\t\t\t&#123;\t\t\t\t\t\t\tresult-&gt;data.flag = 1; // 给图书打上有借出的标记\t\t\t\t\t\t\tresult-&gt;data.current_num--; // 书籍数减一\t\t\t\t\t\t\toutcome-&gt;student.bookinfo[outcome-&gt;student.current_number] = result-&gt;data;\t\t\t\t\t\t\toutcome-&gt;student.current_number++;\t\t\t\t\t\t\tsaveStudentToFile(&quot;Student.txt&quot;, STU);\t\t\t\t\t\t\tprintf(&quot;\\n借阅成功\\n&quot;);\t\t\t\t\t\t&#125;\t\t\t\t\t\telse if (outcome != NULL &amp;&amp; outcome-&gt;student.current_number &gt;= MAXNUM)\t\t\t\t\t\t&#123;\t\t\t\t\t\t\tprintf(&quot;\\a\\n抱歉，你所借书籍数目已经超过最大书籍数\\n&quot;);\t\t\t\t\t\t\tsystem(&quot;pause&quot;);\t\t\t\t\t\t\tsystem(&quot;cls&quot;);\t\t\t\t\t\t\treturn 0;\t\t\t\t\t\t&#125;\t\t\t\t\t&#125;\t\t\t\t\telse\t\t\t\t\t&#123;\t\t\t\t\t\treturn 0;\t\t\t\t\t&#125;\t\t\t\t&#125;\t\t\t&#125;\t\t\tbreak;\t\tcase 2:\t\tF:  printf(&quot;\\n请输入书籍的ISBN：&quot;);\t\t\tscanf(&quot;%s&quot;, tempBook.ISBN);\t\t\tresult = searchBookByISBN(list, tempBook.ISBN);\t\t\tif (result == NULL)\t\t\t&#123;\t\t\t\tprintf(&quot;\\a\\n未找相关的书籍！\\n\\n&quot;);\t\t\t\tprintf(&quot; -------------------------------------------------------\\n&quot;);\t\t\t\tprintf(&quot;    [1].继续搜索   [2].返回上一级菜单   [0].退出系统    \\n&quot;);\t\t\t\tprintf(&quot; -------------------------------------------------------\\n&quot;);\t\t\t\tprintf(&quot;请选择：&quot;);\t\t\t\tint temp = 0;\t\t\t\tscanf(&quot;%d&quot;, &amp;temp);\t\t\t\tsystem(&quot;cls&quot;);\t\t\t\tswitch (temp)\t\t\t\t&#123;\t\t\t\tcase 1:\t\t\t\t\tgoto F;\t\t\t\t\tbreak;\t\t\t\tcase 2:\t\t\t\t\tgoto D;\t\t\t\t\tbreak;\t\t\t\tcase 0:\t\t\t\t\tsystem(&quot;cls&quot;);\t\t\t\t\tprintf(&quot; ------------------------------------------------------------\\n&quot;);\t\t\t\t\tprintf(&quot;                   -=  感谢使用，再见！ =-                   \\n&quot;);\t\t\t\t\tprintf(&quot; ------------------------------------------------------------\\n&quot;);\t\t\t\t\tSleep(500);\t\t\t\t\texit(0);\t\t\t\t\tbreak;\t\t\t\t&#125;\t\t\t&#125;\t\t\telse\t\t\t&#123;\t\t\t\tif (result-&gt;data.current_num &gt; 0)\t\t\t\t&#123;\t\t\t\t\tprintf(&quot;\\a\\n\\n 确定要借阅书籍《%s》？\\n&quot;, result-&gt;data.name);\t\t\t\t\tprintf(&quot; -------------------------------------------------------\\n&quot;);\t\t\t\t\tprintf(&quot;                   [1].是      [0].否                   \\n&quot;);\t\t\t\t\tprintf(&quot; -------------------------------------------------------\\n&quot;);\t\t\t\t\tint a = 0;\t\t\t\t\tscanf(&quot;%d&quot;, &amp;a);\t\t\t\t\tif (a == 1)\t\t\t\t\t&#123;\t\t\t\t\t\tstruct studentInfo tempStudent = &#123;\t\t\t\t\t\t\t&quot;\\0&quot;,\t\t\t\t\t\t\t0,\t\t\t\t\t\t&#125;;\t\t\t\t\t\tprintf(&quot;\\a\\n请输入你的学号：&quot;);\t\t\t\t\t\tscanf(&quot;%s&quot;, tempStudent.ID);\t\t\t\t\t\toutcome = searchStudentByID(STU, tempStudent.ID); // 查找此学生\t\t\t\t\t\tif (outcome == NULL) // 从未借过书\t\t\t\t\t\t&#123;\t\t\t\t\t\t\tresult-&gt;data.flag = 1; // 给图书打上有借出的标记\t\t\t\t\t\t\tresult-&gt;data.current_num--; // 书籍数减一\t\t\t\t\t\t\ttempStudent.bookinfo[0] = result-&gt;data;\t\t\t\t\t\t\ttempStudent.current_number++;\t\t\t\t\t\t\tinsertStudentByHead(STU, tempStudent);\t\t\t\t\t\t\tsaveStudentToFile(&quot;Student.txt&quot;, STU);\t\t\t\t\t\t\tprintf(&quot;\\n借阅成功!&quot;);\t\t\t\t\t\t&#125;\t\t\t\t\t\telse if (outcome != NULL &amp;&amp; outcome-&gt;student.current_number &lt; MAXNUM) // 所借书籍数未超过 MAXNUM\t\t\t\t\t\t&#123;\t\t\t\t\t\t\tresult-&gt;data.flag = 1; // 给图书打上有借出的标记\t\t\t\t\t\t\toutcome-&gt;student.bookinfo[outcome-&gt;student.current_number] = result-&gt;data;\t\t\t\t\t\t\toutcome-&gt;student.current_number++;\t\t\t\t\t\t\tsaveStudentToFile(&quot;Student.txt&quot;, STU);\t\t\t\t\t\t\tprintf(&quot;\\n借阅成功!&quot;);\t\t\t\t\t\t&#125;\t\t\t\t\t\telse if (outcome != NULL &amp;&amp; outcome-&gt;student.current_number &gt;= MAXNUM)\t\t\t\t\t\t&#123;\t\t\t\t\t\t\tprintf(&quot;\\a\\n抱歉，你所借书籍数目已经超过最大书籍数\\n\\n&quot;);\t\t\t\t\t\t\tsystem(&quot;pause&quot;);\t\t\t\t\t\t\tsystem(&quot;cls&quot;);\t\t\t\t\t\t\treturn 0;\t\t\t\t\t\t&#125;\t\t\t\t\t&#125;\t\t\t\t\telse\t\t\t\t\t&#123;\t\t\t\t\t\treturn 0;\t\t\t\t\t&#125;\t\t\t\t&#125;\t\t\t&#125;\t\t\tbreak;\t\tcase 3:\t\t\treturn 0;\t\t\tbreak;\t\t&#125;\t&#125;\tbreak;\tcase 3: // 图书归还\t\tprintf(&quot; ============================================================\\n&quot;);\t\tprintf(&quot; |                                                          |\\n&quot;);\t\tprintf(&quot; |                    [1].归还书籍                          |\\n&quot;);\t\tprintf(&quot; |                                                          |\\n&quot;);\t\tprintf(&quot; |                    [2].返回上一级菜单                    |\\n&quot;);\t\tprintf(&quot; |                                                          |\\n&quot;);\t\tprintf(&quot; ============================================================\\n&quot;);\t\tprintf(&quot;请选择：&quot;);\t\tint tempcase = 0;\t\tscanf(&quot;%d&quot;, &amp;tempcase);\t\tsystem(&quot;cls&quot;);\t\tif (tempcase == 1)\t\t&#123;\t\t\tprintf(&quot;\\n请输入要归还的书籍的名字：&quot;);\t\t\tscanf(&quot;%s&quot;, tempBook.name);\t\t\tresult = searchBookByName(list, tempBook.name);\t\t\tif (result == NULL)\t\t\t&#123;\t\t\t\tprintf(&quot;\\a\\n此书籍不属于本图书馆\\n\\n&quot;);\t\t\t&#125;\t\t\telse\t\t\t&#123;\t\t\t\tchar ID[IDLength + 1];\t\t\t\tprintf(&quot;\\n请输入你的学号：&quot;);\t\t\t\tscanf(&quot;%s&quot;, ID);\t\t\t\tdeleteStuByName(STU, tempBook.name, ID);\t\t\t\tprintf(&quot;\\a\\n归还成功\\n\\n&quot;);\t\t\t\tsaveStudentToFile(&quot;Student.txt&quot;, STU);\t\t\t&#125;\t\t&#125;\t\telse\t\t&#123;\t\t\treturn 0;\t\t&#125;\t\tbreak;\tcase 4:\t\treturn 1;\t\tbreak;\tcase 0: // 结束程序\t\tsystem(&quot;cls&quot;);\t\tprintf(&quot; ------------------------------------------------------------\\n&quot;);\t\tprintf(&quot;                   -=  感谢使用，再见！ =-                   \\n&quot;);\t\tprintf(&quot; ------------------------------------------------------------\\n&quot;);\t\tSleep(500);\t\texit(0);\t\tbreak;\tdefault:\t\tprintf(&quot;error\\n&quot;);\t\tbreak;\t&#125;\tsystem(&quot;pause&quot;);\tsystem(&quot;cls&quot;);\treturn 0;&#125;// 主交互界面void mainKeyDown()&#123;A:\tmainMenu(); // 主界面函数; 标签A用来标记，在下面会用到\tint tempkey = 0;\tscanf(&quot;%d&quot;, &amp;tempkey);\tsystem(&quot;cls&quot;);\tswitch (tempkey)\t&#123;\tcase 1: // 进入管理员端\t\twhile (1)\t\t&#123;\t\t\tmanagerMenu();\t\t\tint tempcase = mannagerKeyMenu();\t\t\tif (tempcase == 1) // 这个操作使用来实现功能中的返回主函数\t\t\t&#123;\t\t\t\tgoto A;\t\t\t&#125;\t\t&#125;\t\tbreak;\tcase 2: // 进入学生端\t\twhile (1)\t\t&#123;\t\t\tstudentMenu();\t\t\tint tempcase = studentKeyMenu();\t\t\tif (tempcase == 1) // 这个操作使用来实现功能中的返回主函数\t\t\t&#123;\t\t\t\tgoto A;\t\t\t&#125;\t\t&#125;\t\tbreak;\tcase 0: // 程序结束\t\tprintf(&quot; ------------------------------------------------------------\\n&quot;);\t\tprintf(&quot;                   -=  感谢使用，再见！ =-                   \\n&quot;);\t\tprintf(&quot; ------------------------------------------------------------\\n&quot;);\t\tSleep(500);\t\texit(0);\t\tbreak;\tdefault:\t\tprintf(&quot;error\\n&quot;);\t\tbreak;\t&#125;&#125;\n\n","categories":["项目","C"],"tags":["C语言"]},{"title":"汉诺塔问题","url":"/2022/07/18/%E6%B1%89%E8%AF%BA%E5%A1%94%E9%97%AE%E9%A2%98/","content":"使用递归解决汉诺塔问题\n\n\n\n\n题目给定一个由n个圆盘组成的塔，这些圆盘按照大小递减的方式套在第一根桩柱上。现要将整个塔移动到另一根桩柱上，每次只能移动一个圆盘，且较大的圆盘在移动过程中不能放置在较小的圆盘上面。\n输入格式:输入由四行：第一行是圆盘数量n(1&lt;&#x3D;n&lt;&#x3D;10);第二行到第四行分别是三根桩柱的名字(字符串)，n个盘子套在第一根桩柱上。\n输出格式:输出移动步骤，每行输出一步。\n输入样例:在这里给出一组输入。例如：\n2abc\n\n输出样例:在这里给出相应的输出。例如：\na-&gt;ba-&gt;cb-&gt;c\n\n题解分析过程3个柱子分别命名为起始柱、目标柱和辅助柱。\n\n1个圆盘的情况，直接移过去就行了\n2个圆盘\n\n\n\n\n三个圆盘\n\n\n规律：\n\n将起始柱上的 n-1 个圆盘移动到辅助柱上；\n将起始柱上遗留的 1 个圆盘移动到目标柱上；\n将辅助柱上的所有圆盘移动到目标柱上。\n\n由此，n 个圆盘的汉诺塔问题就简化成了 n-1 个圆盘的汉诺塔问题。按照同样的思路，n-1 个圆盘的汉诺塔问题还可以继续简化，直至简化为移动 3 个甚至更少圆盘的汉诺塔问题。\n代码#include&lt;stdio.h&gt;int count = 1;void hanuota(int n, char* sta, char *aux, char* tar);int main() &#123;\tint n;\tchar sta[20], aux[20], tar[20];\tscanf(&quot;%d %s %s %s&quot;, &amp;n, sta, aux, tar);\thanuota(n, sta, aux, tar);\treturn 0;&#125;void hanuota(int n, char* sta, char* aux, char* tar) &#123;\tif (n == 1) &#123;\t\t//n=1,直接移动到目标柱上 \t\tprintf(&quot;%s-&gt;%s\\n&quot;,sta, tar);\t\tcount++;\t&#125;\telse &#123;\t\thanuota(n - 1, sta, tar, aux);\t\t//将n-1移动到辅助柱上 \t\tprintf(&quot;%s-&gt;%s\\n&quot;,sta, tar);\t\tcount++;\t\thanuota(n - 1, aux, sta, tar);\t&#125;&#125;","categories":["PTA","C"],"tags":["C语言","PTA"]},{"title":"文件读写函数","url":"/2022/07/16/%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99%E5%87%BD%E6%95%B0/","content":"C语言中关于文件读写的函数\n\n\n字符读写字符写入文件函数 fputcfputc函数的原型如下：\nint fputc( int c, FILE *fp );\n\n参数说明：    其中，c是要写入的字节，它虽被定义为整型，但只使用最低位的一字节，fp是文件指针。\nfputc的功能:    将字节c输出至fp所指向的文件。如果成功，位置指针自动后 移1字节的位置，并且返回c；否则返回EOF。\n从文件中读取字符 fgetcfgetc函数的原型如下:\nint fgetc( FILE *fp );\n\n参数说明：    其中fp为文件指针。\nfgetc的功能:    从fp所指向的文件中读取一个字节，如果成功则返回读取的字节，位置指针自动后移1字节的位置；否则返回EOF。\n字符串的读写字符串写入文件函数 fputsfputs函数的原型如下：\nint fputs( const char *s, FILE *fp );\n\n参数说明：    其中，s是要写入的字符串，fp是文件指针。\nfputs的功能：    将字符串s输出至fp所指向的文件（不含’\\0’）。如果成功，位置指针自动后移，函数返回一个非负整数；否则返回EOF。\n从文件中读取字符 fgetsfgets函数的原型如下：\nchar *fgets( char *s， int n， FILE *fp );\n\n参数说明：    其中，s指向待赋值字符串的首地址，n是控制读取个数的参数，fp为文件指针。 \nfgets的功能：    从位置指针开始读取 一行或n-1个字符，并存入s，存储时自动在字符串结尾加上’\\0’。如果函数执行成功，位置指针自动后移，并返回s的值，否则返回NULL。\n块数据读写所谓块读写，就是读写n块以m个字节为单位的二进制数据，可以是一个字符（一个字符为一字节，则块大小为1×1),可以是一个长度为n字符串（块大小1×n），可以是长度为n的整型数组（整型以4字节算，块大小4×n），也可以是结构体等任意数据类型，并没有什么限制。\n向文件中写入块数据fwritefwrite函数的原型如下：\nsize_t fwrite ( void * ptr, size_t size, size_t count, FILE *fp );\n\n参数说明：    ptr：指向保存读写数据的内存的指针，它可以指向数组、变量、结构体等。    size：表示每个数据块的字节数。    count：表示要读写的数据块的块数。    fp：表示文件指针。    理论上，每次读写 size*count 个字节的数据。\nfwrite的功能：    从内存中的ptr指向的地址开始，将连续n*size字节的内容写入fp文件中。该函数的返回值是实际写入的数据块个数。\n从文件中读取块数据freadfread函数的原型如下：\nsize_t fread ( void *ptr, size_t size, size_t count, FILE *fp );\n&#x2F;&#x2F;size_t 是在 stddef.h 头文件中使用 typedef 定义的数据类型，表示无符号整数，也即非负数，常用来表示数量。\n参数说明：    见[[文件读写函数#^ece6a5|fwrite]]\nfread的功能：    从文件fp中，连续读取n*size字节的内容，并存入ptr指向的内存空间。该函数的返回值是实际读入的数据块个数。\n格式化读写格式化读写函数包括fprintf和fscanf两个函数，它们只用于文本文件的读写，不能用于二进制文件的读写。文本文件与二进制文件的区别下面注意点中有介绍。\n格式化写入文件fprintffprintf函数的原型如下：\nint fprintf( FILE *fp, const char* format, 输出参数1, 输出参数2… );\n\n参数说明:    其中，fp是文件指针，format为格式控制字符串，输出参数列表为待输出的数据。 \nfprintf的功能：    根据指定的格式（format参数）发送数据（输出参数）到文件fp。例：\n#include &lt;stdio.h&gt;int main()&#123;    FILE *fp;    fp = fopen(&quot;a.txt&quot;,&quot;w&quot;);    int a = 10;    double f = 11.11;    fprintf(fp, &quot;%d%lf&quot;, a, f);    fclose(fp);    return 0;&#125;\n\n注意：fprintf()按格式输入到流，其用法和printf()相同，不过不是写到控制台，而是写到流罢了。注意的是返回值为此次操作写入到文件的字节数。如int c &#x3D;fprintf(fp, “%s %s %d %f”, str1,str2, a, b) ;假设str1：10字节；str2：10字节；a：2字节；b：8字节；则最终c为33，因为写入时不同的数据间自动加入一个空格。\n从文件中格式化读取fscanffscanf函数的原型如下：\nint fscanf( FILE *fp,  const char* format, 地址1，地址2… );\n\n函数说明：    其中，fp是文件指针，format为格式控制字符串，地址列表为输入数据的存放地址。 \nfscanf的功能：    根据指定的格式（format参数）从文件fp中读取数据至内存（地址）。例：\n#include &lt;stdio.h&gt;  int main()&#123;    FILE *fp;       fp = fopen(&quot;a.txt&quot;,&quot;r&quot;); //需要创建a.txt文件，然后写入两个数据，空格隔开    int i=0;    double f=0;    fscanf( fp, &quot;%d%lf&quot;, &amp;i, &amp;f );    fclose(fp);    printf(&quot;%d\\n%lf\\n&quot;,i,f);    return 0;&#125;\n\n","categories":["笔记","C"],"tags":["C语言"]}]